/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <string>

#ifdef __cplusplus
extern "C" {
#endif

static const char *className = "com/jqorz/jni/JniGet";

static int addNum(JNIEnv *env) {
    return 1;
}

static JNINativeMethod gJni_Methods_table[] = {
        {"getResult", "(V)I", (jint *) addNum}
};

static int jniRegisterNativeMethods(JNIEnv *env, const char *className,
                                    const JNINativeMethod *gMethod, int numMethods) {
    jclass clazz = (env)->FindClass(className);
    if (clazz == nullptr) {
        return -1;
    }

    int result = 0;
    if ((env)->RegisterNatives(clazz, gJni_Methods_table, numMethods) < 0) {
        return -1;
    }
    (env)->DeleteLocalRef(clazz);
    return result;
}

jint JNI_OnLoad(JavaVM *vm, void *reserved) {
    JNIEnv *env = nullptr;
    jint result = -1;
    if (vm->GetEnv((void **) &env, JNI_VERSION_1_4) != JNI_OK) {
        return result;
    }

    jniRegisterNativeMethods(env, className, gJni_Methods_table, sizeof gJni_Methods_table);

    return JNI_VERSION_1_4;
}


#ifdef __cplusplus
}
#endif